<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.microservice.filestorage.mapper.FastdfsMapper" >
  <resultMap id="BaseResultMap" type="com.microservice.filestorage.entity.FastdfsEntity">
        <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="ORIGINAL_FILE_NAME" jdbcType="VARCHAR" property="originalFileName" />
    <result column="FILE_NAME" jdbcType="VARCHAR" property="fileName" />
    <result column="CONTENT_TYPE" jdbcType="VARCHAR" property="contentType" />
    <result column="EXT" jdbcType="VARCHAR" property="ext" />
    <result column="FILE_SIZE" jdbcType="DECIMAL" property="fileSize" />
    <result column="GROUP1" jdbcType="VARCHAR" property="group" />
    <result column="FULL_PATH" jdbcType="VARCHAR" property="fullPath" />
    <result column="PATH" jdbcType="VARCHAR" property="path" />
    <result column="STATE" jdbcType="VARCHAR" property="state" />
    <result column="MESSAGE" jdbcType="VARCHAR" property="message" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    ID, ORIGINAL_FILE_NAME, FILE_NAME, CONTENT_TYPE, EXT, FILE_SIZE, GROUP1, FULL_PATH, 
    PATH, STATE, MESSAGE
  </sql>
  
  <select id="find" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TB_FILE_STATE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <delete id="delete" parameterType="java.lang.String" >
    delete from TB_LOG
    where LOG_ID = #{logId,jdbcType=VARCHAR}
  </delete>
  
  <insert id="add" parameterType="com.microservice.filestorage.entity.FastdfsEntity">
    
    insert into TB_FILE_STATE
    <trim prefix="(" suffix=")" suffixOverrides=",">
        ID,
      <if test="originalFileName != null">
        ORIGINAL_FILE_NAME,
      </if>
      <if test="fileName != null">
        FILE_NAME,
      </if>
      <if test="contentType != null">
        CONTENT_TYPE,
      </if>
      <if test="ext != null">
        EXT,
      </if>
      <if test="fileSize != null">
        FILE_SIZE,
      </if>
      <if test="group != null">
        GROUP1,
      </if>
      <if test="fullPath != null">
        FULL_PATH,
      </if>
      <if test="path != null">
        PATH,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="message != null">
        MESSAGE,
      </if>
      <if test="tab != null">
        TAB,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        #{id,jdbcType=VARCHAR},
        <if test="originalFileName != null">
        #{originalFileName,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="ext != null">
        #{ext,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=DECIMAL},
      </if>
      <if test="group != null">
        #{group,jdbcType=VARCHAR},
      </if>
      <if test="fullPath != null">
        #{fullPath,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="tab != null">
        TAB = #{tab,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="update" parameterType="com.microservice.filestorage.entity.FastdfsEntity">
    update TB_FILE_STATE
    <set>
      <if test="originalFileName != null">
        ORIGINAL_FILE_NAME = #{originalFileName,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        FILE_NAME = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        CONTENT_TYPE = #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="ext != null">
        EXT = #{ext,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        FILE_SIZE = #{fileSize,jdbcType=DECIMAL},
      </if>
      <if test="group != null">
        GROUP1 = #{group,jdbcType=VARCHAR},
      </if>
      <if test="fullPath != null">
        FULL_PATH = #{fullPath,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        PATH = #{path,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        MESSAGE = #{message,jdbcType=VARCHAR},
      </if>
      <if test="tab != null">
        TAB = #{tab,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByMap" parameterType="java.util.Map">
    update TB_LOG
    <set>
        <foreach collection="params" index="key" item="value" separator=", ">
            <if test="key != 'where'">
            	<if test="value.toString()=='now'">
            		${key} = sysdate
            	</if>
            	<if test="value.toString()!='now'">
            		${key} = #{value}
            	</if>
            </if>
        </foreach>
    </set>
    <where>
        <if test="params.where==null">
            1=0
        </if>
        <if test="params.where!=null">
            <foreach collection="params.where" index="key" item="value" separator=" and ">
            	<if test="key.indexOf('min') ==0">
            		<if test="value.toString()=='now'">
            			${key.substring(3)} &gt; sysdate
	            	</if>
	            	<if test="value.toString()!='now'">
	            		${key.substring(3)} &gt; #{value}
	            	</if>
        		</if>
        		<if test="key.indexOf('max') ==0">
        			<if test="value.toString()=='now'">
            			${key.substring(3)} &lt; sysdate
	            	</if>
	            	<if test="value.toString()!='now'">
	            		${key.substring(3)} &lt; #{value}
	            	</if>
        		</if>
        		<if test="key.indexOf('like') ==0">
        			${key.substring(4)} like #{value}
        		</if>
        		<if test="key.indexOf('min') !=0 and key.indexOf('max') !=0 and key.indexOf('like') !=0">
            		${key} = #{value}
        		</if>
            </foreach>
        </if>
    </where>
  </update>
 
  <select id="searchRequest" resultMap="BaseResultMap" parameterType="common.search.entity.SearchRequest">
		select
		<include refid="Base_Column_List" />
		from
        
        <if test='pageSize ==null or pageSize ==0'>
			TB_LOG ${where} 
	        <if test='orderBy !=null and orderBy !=""'>
				order by ${orderBy}
			</if>
		</if>
        
        <if test='pageSize !=null and pageSize>0'>
			(select ROWNUM as rn, 
			<include refid="Base_Column_List" />
			from(
				select 
				<include refid="Base_Column_List" />
				from TB_LOG ${where}
				<if test='orderBy !=null and orderBy !=""'>
					order by ${orderBy}
				</if>
				)t1 order by rn
			)t2 where rn between 1 and ${pageSize} 
		</if>
	</select>
	
	<select id="count" resultType="java.lang.Integer" parameterType="common.search.entity.SearchRequest">
		select count(0) from TB_LOG ${where}
	</select>
	
	<select id="pageRequest" resultMap="BaseResultMap" parameterType="common.search.entity.PageRequest">
		select
		<include refid="Base_Column_List" />
		from(
		select ROWNUM as rn,
        <include refid="Base_Column_List" />
        from(
	        select 
	        <include refid="Base_Column_List" />
	        from TB_LOG ${where} 
			<if test='orderBy !=null and orderBy !=""'>
				order by ${orderBy}
			</if>
			)t1 order by rn
		)t2 where rn between ${indexFrom+1} and (${indexFrom}+${pageSize})
	</select>
	
</mapper>
